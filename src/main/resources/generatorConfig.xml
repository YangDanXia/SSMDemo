<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >

<generatorConfiguration>
    <classPathEntry location="E:\maven\repository\mysql\mysql-connector-java\5.1.36\mysql-connector-java-5.1.36.jar"/>
    <context id="context1" targetRuntime="MyBatis3">
        <!--序列化pojo-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>

        <!--是否去除自动生成的注释-->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://localhost:3306/demo"
        userId="root" password="ydx123"/>

        <!--生成model模型-->
        <javaModelGenerator targetPackage="com.model" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaModelGenerator>

        <!--生成mapper.xml文件的地址-->
        <sqlMapGenerator targetPackage="com.dao" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!--对应的Mapper接口-->
        <javaClientGenerator targetPackage="com.dao" targetProject="src/main/java" type="XMLMAPPER">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--列出要生成代码的所有数据表,设置不生成Example文件 -->
        <!--table标签可通过设置domainObjectName属性指定生成对象的基本名称。如果没有指定，MBG会自动根据表名来生成名称-->
        <table tableName="user" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" selectByExampleQueryId="false" >
        <!-- 实体类中的成员变量和表的列明一一对应 -->
            <property name="useActualColumnNames" value="true"/>
        </table>
    </context>

</generatorConfiguration>